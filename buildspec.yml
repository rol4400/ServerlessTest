version: 0.2

phases:   
  build:
    commands:
    
       # Install dependencies needed for running tests
      - npm install
      
      # List node modules installed
      - ls -ltr node_modules
      
      # Upgrade AWS CLI to the latest version
      # - pip install --upgrade awscli

      # Setup serverless
      - npm install -g serverless
      
      # Discover and run unit tests in the 'tests' directory
      - npm test
      
      # Build the project
      - npm run generate
      
      # Render view components with nuxt
      # - ./node_modules/.bin/nuxt generate
      
      # Deploy to dev stage
      # - serverless deploy --stage dev --verbose

      # - serverless deploy --stage dev | tee deploy.out 
      # Deploy using serverless framework and move the artifact to the deployment bucket
      # - serverless package
      # - npm run deploy-prod

      # - ./deploy_artifact.sh
      # - cp .serverless/cloudformation-template-update-stack.json .serverless/template-export.json

      # OLD DEPLOYMENT: Use AWS SAM to package the application by using AWS CloudFormation
      # - aws s3 cp --recursive public/ s3://$WEBSITE_S3_BUCKET/public/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
      # - sed -i -e "s|assets/|$WEBSITE_S3_PREFIX/public/assets/|g" public/index.html

      # Generate a template.yml file in the AWS SAM format from the serverless.yml file
      - serverless sam export --output template.yml

      # Package the artifacts generated by the build process and write the new locations of these artifacts to a new
      # template file to use with cloudformation
      - aws cloudformation package --template template.yml --s3-bucket $S3_BUCKET --output-template template-export.yml
      
      # Deploy using the generated cloudformation template
      #- aws cloudformation deploy --template-file template-export.yml --s3-bucket $S3_BUCKET --stack-name serverlesstest3-dev

artifacts:
  type: zip
  files:
    - *
  discard-paths: no
